Contracts:
- First of all: make and use ERC-2350: /media/daniella/9C33-6BBD/SD-DO/&SDhsp/&allREADFIRST/README.txt
- Cursor add Feature: action: addFolder (CID string, CIDs array; can also add name, etc as for file CIDs)
- Cursor add Feature: option to also add the results of "sha512sum -t " and "openssl dgst -sha3-512 "
- add "Verify" feature, depending on the external "Onchain IPFS Verifier". When this contract says a register is legit, the NFT will get a checkmark at any time
- Deployer/Admin can remove/change the name of a file/folder, for example when violating laws/not related to the file
- Deployer/Admin can add the "hidden" flag to a file/folder
- Deployer/Admin can change authorship of a file/folder
-
- Organize Tasks: detect duplicate CID+content, accept duplicate CID so open dispute with DAO/owner, can cancel register from storage and replace by other at any time when discovering a CID was fraudulent compared to the desired content, separate function for the brand new "IPFS Web2URLs" smart-contract where the same CID can have several URLs
-
- Option to tell the file original URL, just in case it wasn't originally on IPFS. This will enable this URL to become preserved, but futurely such feature will require oracles to tell wether the URL is offline or online with diverging CID. merge '/media/daniella/9C33-6BBD/SD-DO/&SDhsp/Onchain IPFS/IPFS Web2URLs' and its associated ChatGPT conversation
- also merge '/media/daniella/9C33-6BBD/SD-DO/&SDhsp/Onchain IPFS/IPFS Arweave' and its associated ChatGPT conversation

Extensive testing:
- Guarantee it can return (Read action) the number of registers (NFTs) made

?already added?
- Fields for a file: type (plaintext - includes SVG, JSON, etc -, base64), full or partial, if partial use tx ID so now new option: if it is alone in the tx or if there's more text around, filename (optional), split-parts (optional, if file is split in parts due to being too large for a single tx - comma-separated tx URIs)
- Can add filename to an already existing file, but requires owning it
- After publishing a file, will receive an NFT with its ID or filename on the img, plus the CID
- Declare the author of the file, by using ETH address or a simple name

Site design:
- Logotype: IPFS logotype but Base's blue and instead of "IPFS": "OFS"
-
mottos:
-?? "The easier, faster, cheaper alternative to Arweave for permanent storage. "
-? "Store files referenced by Ethereum L1, on L2!"

Check if these are present on Onchain IPFS:
"I need a new field, which can be filled OPTIONALLY: content author!

If it is filled, the contract readers will know the original owner/author of the onchain content. Otherwise, they'll assume the owner is the one who wrote the data & minted the NFT."
"Please change it, adding another additional field, so distinct: author name and author URL."
"also add the Title and Filename fields!"
"Thank you!
We'll have to do some changes!

- Deployer will be admin
- Admin can transfer ownership, but only once (if the one who received tries to transfer, it will revert)
- Make it a proxy. Separate proxy and implementation (2 different code blocks on ChatGPT). Proxy will have only the admin ownership features.
- Registrations (IPFS CID+Torrent URI) will have a Verification feature: admin can verify a registration, permanently showing its authenticity.

"Do your code avoid duplicity?

Even if user use a different CID, should not be allowed go use an existing URI.
Same for when using a different URI while using an existing CID."

No, it won't revert anymore:
Let's change it. User now CAN submit a repeated Torrent URI, or a repeated IPFS CID, but: this will open a Dispute. Admin will will choose which one to verify, or which one to add the "Fake" tag (or to add "Fake" to both).

"Finally, there will be a field to put the actual file's content, either in Base64, plain text etc.

Also a field with a boolean if the file is multipart or no, so the file content field will be disabled and the new file content field will be an array so user can add each part of that file"

-

Onchain IPFS:
- Verifications part on the SVG, either "display:none" or not, also the "Fake"
- add the "100% store in Onchain IPFS" seal to Seals page!

-

https://www.godaddy.com/pt-br/domainsearch/find?domainToCheck=onchainipfs.xyz
-
Extra: Coinbase Smart Wallet (https://www.coinbase.com/wallet/smart-wallet) integration seems done, but need CB Onchain Verifications (https://www.coinbase.com/onchain-verify) and Account Abstraction Kit (https://www.coinbase.com/developer-platform/solutions/account-abstraction-kit)
OnchainKit (https://onchainkit.xyz/) maybe already already included with buildonchainapps kit
and may need https://www.smartwallet.dev/base-gasless-campaign

https://www.quicknode.com/guides/ethereum-development/dapps/how-to-build-an-ethereum-url-shortener-dapp

-

Launch:
- Little hand: Gitcoin, Orb's Build Club (https://orb.club/p/0xa68c-0x0757)

Later Iterations:
- factory.tamigucho.com/mintables/{mintable}: add the "Onchain IPFS" button next to the Arweave button
- Also come with a Bash script (ipfs-onchain) that will fetch Base to download a CID and locally validate the result. This script will be used by GIPFS' IPFS wrapper. So, GIPFS ipfs wrapper will fetch files using this priority: gateway, blockchain, IPFS network
