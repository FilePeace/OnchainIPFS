Contracts:
- First of all: make and use ERC-2350: /media/daniella/9C33-6BBD/SD-DO/&SDhsp/&allREADFIRST/README.txt
- Cursor add Feature: action: addFolder (CID string, CIDs array; can also add name, etc as for file CIDs)
- Cursor add Feature: option to also add the results of "sha512sum -t " and "openssl dgst -sha3-512 "
- add "Verify" feature, depending on the external "Onchain IPFS Verifier". When this contract says a register is legit, the NFT will get a checkmark at any time
- Deployer/Admin can remove/change the name of a file/folder, for example when violating laws/not related to the file
- Deployer/Admin can add the "hidden" flag to a file/folder
- Deployer/Admin can change authorship of a file/folder
-
- Organize Tasks: detect duplicate CID+content, accept duplicate CID so open dispute with DAO/owner, can cancel register from storage and replace by other at any time when discovering a CID was fraudulent compared to the desired content, separate function for the brand new "IPFS Web2URLs" smart-contract where the same CID can have several URLs
-
- Option to tell the file original URL, just in case it wasn't originally on IPFS. This will enable this URL to become preserved, but futurely such feature will require oracles to tell wether the URL is offline or online with diverging CID. merge '/media/daniella/9C33-6BBD/SD-DO/&SDhsp/Onchain IPFS/IPFS Web2URLs' and its associated ChatGPT conversation
- also merge '/media/daniella/9C33-6BBD/SD-DO/&SDhsp/Onchain IPFS/IPFS Arweave' and its associated ChatGPT conversation

Extensive testing:
- Guarantee it can return (Read action) the number of registers (NFTs) made

?already added?
- Fields for a file: type (plaintext - includes SVG, JSON, etc -, base64), full or partial, if partial use tx ID so now new option: if it is alone in the tx or if there's more text around, filename (optional), split-parts (optional, if file is split in parts due to being too large for a single tx - comma-separated tx URIs)
- Can add filename to an already existing file, but requires owning it
- After publishing a file, will receive an NFT with its ID or filename on the img, plus the CID
- Declare the author of the file, by using ETH address or a simple name

Site design:
- Logotype: IPFS logotype but Base's blue and instead of "IPFS": "OFS"
-
mottos:
-?? "The easier, faster, cheaper alternative to Arweave for permanent storage. "
-? "Store files referenced by Ethereum L1, on L2!"

Launch:
- Little hand: Gitcoin, Orb's Build Club (https://orb.club/p/0xa68c-0x0757)

Later Iterations:
- factory.tamigucho.com/mintables/{mintable}: add the "Onchain IPFS" button next to the Arweave button
- Also come with a Bash script (ipfs-onchain) that will fetch Base to download a CID and locally validate the result. This script will be used by GIPFS' IPFS wrapper. So, GIPFS ipfs wrapper will fetch files using this priority: gateway, blockchain, IPFS network
