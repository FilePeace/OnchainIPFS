0x93b3256d4D121B42e42eAC3c68F289268d404a9C

- BuyMeACoffee: now just change contract name ; fix this: "Unfortunately the smart contract doesn't return the number of messages / memos, there's no good way of knowing the total" as reported on https://github.com/coinbase/build-onchain-apps/pull/516 and implement on both OnchainIPFS and as a PR for buildonchainapps but first ask if it is safe/gas-effective ; get the number of cupcakes an user has purchased ; get the memos a user sent ; admin can update the ETH price of a cupcake at any time ; change price to 0.0006586901726353755 ETH (price of a cupcake) ; make readable what was the price at the time of the memo ; have a lensHandle optional field cloning the "twitterHandle" one! ; replace "Coffee" and "coffee" by "Cupcake" and "cupcake", both on smart-contract and the UI expecting it ; deploy again progressively before finding any issue and until choosing a release stable version
- first try IPFS Torrent / IPFS Arweave, which should make the work progressive/simpler to begin with
-
-onchain ipfs pre-launch: look at these important files: /home/daniella/Desktop/Untitled Folder 2/onchain-ipfs/web/src/store/createWagmiConfig.ts /home/daniella/Desktop/Untitled Folder 2/onchain-ipfs/web/src/utils/paymasterClient.ts /home/daniella/Desktop/Untitled Folder 2/onchain-ipfs/web/src/store/supportedChains.ts (on createWagmiConfig.ts, replace "all" to "smartWalletOnly") ; remember to switch on everything from "basesepolia" to "base" ; create an empty branch, commit "upload", push, rename "main" and rename that new to "main", then rmv onchainipfs.vercel ; mv repo to FilePeace org, then fork at DaniMesq (or better: mirror) and re-create onchain-ipfs.vercel from it
-
/media/daniella/B/git/nerdy DAOs/FilePeace/Dapps/onchain-ipfs/future/contracts
-
/home/daniella/Desktop/Untitled Folder 2/onchain-ipfs/contracts
/home/daniella/Desktop/Untitled Folder 2/onchain-ipfs/contracts/src
/home/daniella/Desktop/Untitled Folder 2/onchain-ipfs/contracts/script
/home/daniella/Desktop/Untitled Folder 2/onchain-ipfs/contracts/test
-
/home/daniella/Desktop/Untitled Folder 2/onchain-ipfs/web/.env.local
yarn add @web3modal/wagmi wagmi viem @tanstack/react-query (walletconnect - then https://cloud.walletconnect.com/app/baf1a34b-8588-44ff-b47c-933e6969898b/project/d3304c8f-655c-487f-98df-1cba5b4ff915 go to Get Started)
/home/daniella/Desktop/Untitled Folder 2/onchain-ipfs/web/src/components/layout/header/AccountConnect.tsx
/home/daniella/Desktop/Untitled Folder 2/onchain-ipfs/web/src/components/layout/footer
/home/daniella/Desktop/Untitled Folder 2/onchain-ipfs/web/src/OnchainProviders.tsx /home/daniella/Desktop/Untitled Folder 2/onchain-ipfs/web/src/constants.ts
/home/daniella/Desktop/Untitled Folder 2/onchain-ipfs/contracts/lib/ERC721A/.git-tmp
/home/daniella/Desktop/Untitled Folder 2/onchain-ipfs/contracts/lib/forge-std/.git-tmp
/home/daniella/Desktop/Untitled Folder 2/onchain-ipfs/contracts/lib/murky/.git-tmp
/home/daniella/Desktop/Untitled Folder 2/onchain-ipfs/contracts/lib/openzeppelin-contracts/.git-tmp
/home/daniella/Desktop/Untitled Folder 2/onchain-ipfs/contracts/lib/solady/.git-tmp

CursorIDE documentation mention: @OnChainKit-general @OnChainKit-provider @Foundry @Anvil @Base-SmartWallet @WAGMI-React @WAGMI-core @WAGMI-CLI @Viem @WalletConnect @Web

Contracts:
- First of all: make and use ERC-2350:
All of my contracts enabling token assets (including Onchain IPFS) should put to work ERC-2350 launched forcibly despite the ignorance it got: '/home/daniella/Desktop/Tasks/4.Huge/Solidity/ERCs/ERC-2350 Semantic' https://ethresear.ch/t/erc-2350-semantic-contracts-erc-extension-draft/6737. Any smart-contract should be able to safely leverage its functions embedded.
-
- Cursor add Feature: action: addFolder (CID string, CIDs array; can also add name, etc as for file CIDs)
- Cursor add Feature: option to also add the results of "sha512sum -t " and "openssl dgst -sha3-512 "
- add "Verify" feature, depending on the external "Onchain IPFS Verifier". When this contract says a register is legit, the NFT will get a checkmark at any time
- Deployer/Admin can remove/change the name of a file/folder, for example when violating laws/not related to the file
- Deployer/Admin can add the "hidden" flag to a file/folder
- Deployer/Admin can change authorship of a file/folder
-
- Organize Tasks: detect duplicate CID+content, accept duplicate CID so open dispute with DAO/owner, can cancel register from storage and replace by other at any time when discovering a CID was fraudulent compared to the desired content, separate function for the brand new "IPFS Web2URLs" smart-contract where the same CID can have several URLs
-
- Option to tell the file original URL, just in case it wasn't originally on IPFS. This will enable this URL to become preserved, but futurely such feature will require oracles to tell wether the URL is offline or online with diverging CID. merge '/media/daniella/9C33-6BBD/SD-DO/&SDhsp/Onchain IPFS/IPFS Web2URLs' and its associated ChatGPT conversation
- also merge '/media/daniella/9C33-6BBD/SD-DO/&SDhsp/Onchain IPFS/IPFS Arweave' and its associated ChatGPT conversation

Extensive testing:
- Guarantee it can return (Read action) the number of registers (NFTs) made

?already added?
- Fields for a file: type (plaintext - includes SVG, JSON, etc -, base64), full or partial, if partial use tx ID so now new option: if it is alone in the tx or if there's more text around, filename (optional), split-parts (optional, if file is split in parts due to being too large for a single tx - comma-separated tx URIs)
- Can add filename to an already existing file, but requires owning it
- After publishing a file, will receive an NFT with its ID or filename on the img, plus the CID
- Declare the author of the file, by using ETH address or a simple name

Site design:
- logo
-
mottos:
-?? "The easier, faster, cheaper alternative to Arweave for permanent storage. "
-? "Store files referenced by Ethereum L1, on L2!"
- Find IPFS CIDs on the blockchain!

add page telling "versus others" (vs. ipfs itself, vs. arweave). for vs. arweave: this system doesn't support adding the IPFS CID of the content. Onchain IPFS is compatible with both IPFS and Arweave, linking them into a single onchain registry: both the Content ID and the file data itself!

Check if these are present on Onchain IPFS:
"I need a new field, which can be filled OPTIONALLY: content author!

If it is filled, the contract readers will know the original owner/author of the onchain content. Otherwise, they'll assume the owner is the one who wrote the data & minted the NFT."
"Please change it, adding another additional field, so distinct: author name and author URL."
"also add the Title and Filename fields!"
"Thank you!
We'll have to do some changes!

- Deployer will be admin
- Admin can transfer ownership, but only once (if the one who received tries to transfer, it will revert)
- Make it a proxy. Separate proxy and implementation (2 different code blocks on ChatGPT). Proxy will have only the admin ownership features.
- Registrations (IPFS CID+Torrent URI) will have a Verification feature: admin can verify a registration, permanently showing its authenticity.

"Do your code avoid duplicity?

Even if user use a different CID, should not be allowed go use an existing URI.
Same for when using a different URI while using an existing CID."

No, it won't revert anymore:
Let's change it. User now CAN submit a repeated Torrent URI, or a repeated IPFS CID, but: this will open a Dispute. Admin will will choose which one to verify, or which one to add the "Fake" tag (or to add "Fake" to both).

"Finally, there will be a field to put the actual file's content, either in Base64, plain text etc.

Also a field with a boolean if the file is multipart or no, so the file content field will be disabled and the new file content field will be an array so user can add each part of that file"

-

https://www.godaddy.com/pt-br/domainsearch/find?domainToCheck=onchainipfs.xyz (or onchainipfs.filepeace.xyz)
-
Extra: Coinbase Smart Wallet (https://www.coinbase.com/wallet/smart-wallet) integration seems done, but need CB Onchain Verifications (https://www.coinbase.com/onchain-verify) and Account Abstraction Kit (https://www.coinbase.com/developer-platform/solutions/account-abstraction-kit)
may need https://www.smartwallet.dev/base-gasless-campaign
-
use CB Onchain Verify to add an extra-level of trust to an IPFS registry as legit (will get priority on disputes). Also accounts using Onchain Verify will get a discount on the dispute verification fee

- Verifications part on the SVG, either "display:none" or not, also the "Fake", and also about Onchain Verify in yellow about trust level

/home/daniella/Desktop/Tasks/4.Huge/Solidity/ERCs/ERC-2350 Semantic/Tasks.txt
/home/daniella/Desktop/Tasks/4.Huge/Solidity/ERCs

-

Launch:
- Little hand: Gitcoin, Orb's Build Club (https://orb.club/p/0xa68c-0x0757)
- add the "100% stored in Onchain IPFS" seal to Seals page!
-
Onchain IPFS: copy the NFTMint contract+UI code, then create the "OnchainIPFS Zorb", but use Zora's smart-contract?
A 3D-rendered image features a soft blue sphere set against a gradient background that transitions from pink at the top to blue at the bottom. In the center of the sphere, a delicate white and blue hexagon is prominently displayed. The hexagon have a translucent quality, with gentle shading and highlights that give them a realistic, slightly ethereal appearance. The overall composition has a soothing and harmonious feel, with smooth, blended colors.
Use many Zorbs commemorative for launch: 6 to collect:
https://www.bing.com/images/create/a-3d-rendered-image-features-a-soft-blue-sphere-se/1-6695e07da4ac4c36bd7718b6d4fb82f2?id=KqmU8dhxiw4mz3k0xOYNXQ%3d%3d&view=detailv2&idpp=genimg&thId=OIG3.lq9YmqGBP2ZIBqCojqGM&FORM=GCRIDP
https://www.bing.com/images/create/a-3d-rendered-image-features-a-soft-blue-sphere-se/1-6695e0a33aac41dbafb5cec2fe2b82c7?id=YhOWMnjRy8t3v6LFiGecug%3d%3d&view=detailv2&idpp=genimg&thId=OIG1.4bGWJnXwQvdXuudDK31F&FORM=GCRIDP
https://www.bing.com/images/create/a-3d-rendered-image-features-a-soft-blue-sphere-se/1-6695e0a33aac41dbafb5cec2fe2b82c7?id=6aZ%2fQJk2s0Dkyr88g1CX5Q%3d%3d&view=detailv2&idpp=genimg&thId=OIG1.z64MY8svAj45BGyaXVL9&FORM=GCRIDP
https://www.bing.com/images/create/a-3d-rendered-image-features-a-soft-blue-sphere-se/1-6695e0a33aac41dbafb5cec2fe2b82c7?id=Gdm9%2fD86BKj5fN7lZD1tQQ%3d%3d&view=detailv2&idpp=genimg&thId=OIG1.8hHCg1E4dRR7suvaqrwl&FORM=GCRIDP
https://www.bing.com/images/create/a-3d-rendered-image-features-a-soft-blue-sphere-se/1-6695e0e5b19b48e7ae1bbb023c4525bb?id=QJW59qJTxCbcz0jOetbUmg%3d%3d&view=detailv2&idpp=genimg&thId=OIG1.gUDxC0yuOpl2m68ISXsw&FORM=GCRIDP
https://www.bing.com/images/create/a-3d-rendered-image-features-a-soft-blue-sphere-se/1-6695e0e5b19b48e7ae1bbb023c4525bb?id=3sX02fQDVWaftjgMMf5oGQ%3d%3d&view=detailv2&idpp=genimg&thId=OIG1.UO3cuws_QCXCa.jbF.rk&FORM=GCRIDP
will mint a random one, for 0.002 ETH each.
https://zora.co/collect/zora:0xf2086c0eaa8b34b0eef73920d0b1b53f4146e2e4/1
https://explorer.zora.energy/address/0xf2086c0eaa8b34b0eef73920d0b1b53f4146e2e4?tab=contract
-
- Implement/fix this for BOAT, based on OnchainIPFS' own NFTs flow: https://github.com/coinbase/build-onchain-apps/issues/328

Later improvements:
- fix /press page, also moving to /press/press-kit
-? Navbar.tsx's logotype: get rid of inline style

Later Iterations:
- factory.tamigucho.com/mintables/{mintable}: add the "Onchain IPFS" button next to the Arweave button
- Also come with a Python script (ipfs-onchain) that will fetch Base to download a CID and locally validate the result. This script will be used by GIPFS' IPFS wrapper. So, GIPFS ipfs wrapper will fetch files using this priority: gateway, blockchain, IPFS network
